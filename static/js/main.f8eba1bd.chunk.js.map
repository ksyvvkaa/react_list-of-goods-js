{"version":3,"sources":["App.jsx","index.jsx"],"names":["goodsFromServer","SORT_PARAMETER_NAME","SORT_PARAMETER_LENGTH","App","useState","sortBy","setSortBy","isReversed","setIsReversed","visibleGoods","goods","preparedGoods","sort","good1","good2","localeCompare","length","reverse","getPreparedGoods","className","type","cn","onClick","map","good","ReactDOM","render","document","getElementById"],"mappings":"iPAKaA,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAGIC,EAAsB,OACtBC,EAAwB,SA2BvB,IAAMC,EAAM,WACjB,MAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KACA,EAAoCF,oBAAS,GAA7C,mBAAOG,EAAP,KAAmBC,EAAnB,KACMC,EA5BR,SAA0BC,EAAOL,EAAQE,GACvC,IAAMI,EAAa,YAAOD,GAqB1B,OAnBIL,GACFM,EAAcC,MAAK,SAACC,EAAOC,GACzB,OAAQT,GACN,KAAKJ,EACH,OAAOY,EAAME,cAAcD,GAE7B,KAAKZ,EACH,OAAOW,EAAMG,OAASF,EAAME,OAE9B,QACE,OAAO,MAKXT,GACFI,EAAcM,UAGTN,EAMcO,CAAiBlB,EAAiBK,EAAQE,GAM/D,OACE,sBAAKY,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UACEE,IACE,SACA,UACA,CAAE,WAAYhB,IAAWJ,IAG7BqB,QAAS,kBAAMhB,EAAUL,IAT3B,iCAcA,wBACEmB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,WAAYhB,IAAWH,IAG7BoB,QAAS,kBAAMhB,EAAUJ,IAT3B,4BAcA,wBACEkB,KAAK,SACLD,UACEE,IACE,SACA,aACA,CAAE,YAAad,IAGnBe,QAAS,kBAAMd,GAAeD,IAThC,sBAcEF,GAAUE,IACV,wBACEa,KAAK,SACLD,UAAU,4BACVG,QAtDW,WACnBhB,EAAU,IACVE,GAAc,IAiDR,sBAUJ,6BACGC,EAAac,KAAI,SAAAC,GAAI,OACpB,oBAAe,UAAQ,OAAvB,SAA+BA,GAAtBA,YC9GnBC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f8eba1bd.chunk.js","sourcesContent":["import 'bulma/css/bulma.css';\nimport './App.scss';\nimport { useState } from 'react';\nimport cn from 'classnames';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nconst SORT_PARAMETER_NAME = 'name';\nconst SORT_PARAMETER_LENGTH = 'length';\n\nfunction getPreparedGoods(goods, sortBy, isReversed) {\n  const preparedGoods = [...goods];\n\n  if (sortBy) {\n    preparedGoods.sort((good1, good2) => {\n      switch (sortBy) {\n        case SORT_PARAMETER_NAME:\n          return good1.localeCompare(good2);\n\n        case SORT_PARAMETER_LENGTH:\n          return good1.length - good2.length;\n\n        default:\n          return 0;\n      }\n    });\n  }\n\n  if (isReversed) {\n    preparedGoods.reverse();\n  }\n\n  return preparedGoods;\n}\n\nexport const App = () => {\n  const [sortBy, setSortBy] = useState('');\n  const [isReversed, setIsReversed] = useState(false);\n  const visibleGoods = getPreparedGoods(goodsFromServer, sortBy, isReversed);\n  const resetSorting = () => {\n    setSortBy('');\n    setIsReversed(false);\n  };\n\n  return (\n    <div className=\"section content\">\n      <div className=\"buttons\">\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-info',\n              { 'is-light': sortBy !== SORT_PARAMETER_NAME },\n            )\n          }\n          onClick={() => setSortBy(SORT_PARAMETER_NAME)}\n        >\n          Sort alphabetically\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-success',\n              { 'is-light': sortBy !== SORT_PARAMETER_LENGTH },\n            )\n          }\n          onClick={() => setSortBy(SORT_PARAMETER_LENGTH)}\n        >\n          Sort by length\n        </button>\n\n        <button\n          type=\"button\"\n          className={\n            cn(\n              'button',\n              'is-warning',\n              { 'is-light': !isReversed },\n            )\n          }\n          onClick={() => setIsReversed(!isReversed)}\n        >\n          Reverse\n        </button>\n\n        {(sortBy || isReversed) && (\n          <button\n            type=\"button\"\n            className=\"button is-danger is-light\"\n            onClick={resetSorting}\n          >\n            Reset\n          </button>\n        )}\n      </div>\n\n      <ul>\n        {visibleGoods.map(good => (\n          <li key={good} data-cy=\"Good\">{good}</li>\n        ))}\n      </ul>\n    </div>\n  );\n};\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}